//
//  RuleRegistry.generated.swift
//  SwiftFormat
//
//  Created by Cal Stephens on 7/27/24.
//  Copyright Â© 2024 Nick Lockwood. All rights reserved.
//

/// All of the rules defined in the Rules directory.
/// **Generated automatically when running tests. Do not modify.**
let ruleRegistry: [String: FormatRule] = [
    "acronyms": .acronyms,
    "andOperator": .andOperator,
    "anyObjectProtocol": .anyObjectProtocol,
    "applicationMain": .applicationMain,
    "assertionFailures": .assertionFailures,
    "blankLineAfterImports": .blankLineAfterImports,
    "blankLineAfterSwitchCase": .blankLineAfterSwitchCase,
    "blankLinesAroundMark": .blankLinesAroundMark,
    "blankLinesAtEndOfScope": .blankLinesAtEndOfScope,
    "blankLinesAtStartOfScope": .blankLinesAtStartOfScope,
    "blankLinesBetweenChainedFunctions": .blankLinesBetweenChainedFunctions,
    "blankLinesBetweenImports": .blankLinesBetweenImports,
    "blankLinesBetweenScopes": .blankLinesBetweenScopes,
    "blockComments": .blockComments,
    "braces": .braces,
    "conditionalAssignment": .conditionalAssignment,
    "consecutiveBlankLines": .consecutiveBlankLines,
    "consecutiveSpaces": .consecutiveSpaces,
    "consistentSwitchCaseSpacing": .consistentSwitchCaseSpacing,
    "docComments": .docComments,
    "docCommentsBeforeAttributes": .docCommentsBeforeAttributes,
    "duplicateImports": .duplicateImports,
    "elseOnSameLine": .elseOnSameLine,
    "emptyBraces": .emptyBraces,
    "emptyExtension": .emptyExtension,
    "enumNamespaces": .enumNamespaces,
    "extensionAccessControl": .extensionAccessControl,
    "fileHeader": .fileHeader,
    "genericExtensions": .genericExtensions,
    "headerFileName": .headerFileName,
    "hoistAwait": .hoistAwait,
    "hoistPatternLet": .hoistPatternLet,
    "hoistTry": .hoistTry,
    "indent": .indent,
    "initCoderUnavailable": .initCoderUnavailable,
    "isEmpty": .isEmpty,
    "leadingDelimiters": .leadingDelimiters,
    "linebreakAtEndOfFile": .linebreakAtEndOfFile,
    "linebreaks": .linebreaks,
    "markTypes": .markTypes,
    "modifierOrder": .modifierOrder,
    "noExplicitOwnership": .noExplicitOwnership,
    "numberFormatting": .numberFormatting,
    "opaqueGenericParameters": .opaqueGenericParameters,
    "organizeDeclarations": .organizeDeclarations,
    "preferForLoop": .preferForLoop,
    "preferKeyPath": .preferKeyPath,
    "propertyType": .propertyType,
    "redundantBackticks": .redundantBackticks,
    "redundantBreak": .redundantBreak,
    "redundantClosure": .redundantClosure,
    "redundantExtensionACL": .redundantExtensionACL,
    "redundantFileprivate": .redundantFileprivate,
    "redundantGet": .redundantGet,
    "redundantInit": .redundantInit,
    "redundantInternal": .redundantInternal,
    "redundantLet": .redundantLet,
    "redundantLetError": .redundantLetError,
    "redundantNilInit": .redundantNilInit,
    "redundantObjc": .redundantObjc,
    "redundantOptionalBinding": .redundantOptionalBinding,
    "redundantParens": .redundantParens,
    "redundantPattern": .redundantPattern,
    "redundantProperty": .redundantProperty,
    "redundantRawValues": .redundantRawValues,
    "redundantReturn": .redundantReturn,
    "redundantSelf": .redundantSelf,
    "redundantStaticSelf": .redundantStaticSelf,
    "redundantType": .redundantType,
    "redundantTypedThrows": .redundantTypedThrows,
    "redundantVoidReturnType": .redundantVoidReturnType,
    "semicolons": .semicolons,
    "sortDeclarations": .sortDeclarations,
    "sortImports": .sortImports,
    "sortSwitchCases": .sortSwitchCases,
    "sortTypealiases": .sortTypealiases,
    "sortedImports": .sortedImports,
    "sortedSwitchCases": .sortedSwitchCases,
    "spaceAroundBraces": .spaceAroundBraces,
    "spaceAroundBrackets": .spaceAroundBrackets,
    "spaceAroundComments": .spaceAroundComments,
    "spaceAroundGenerics": .spaceAroundGenerics,
    "spaceAroundOperators": .spaceAroundOperators,
    "spaceAroundParens": .spaceAroundParens,
    "spaceInsideBraces": .spaceInsideBraces,
    "spaceInsideBrackets": .spaceInsideBrackets,
    "spaceInsideComments": .spaceInsideComments,
    "spaceInsideGenerics": .spaceInsideGenerics,
    "spaceInsideParens": .spaceInsideParens,
    "spacingGuards": .spacingGuards,
    "specifiers": .specifiers,
    "strongOutlets": .strongOutlets,
    "strongifiedSelf": .strongifiedSelf,
    "todos": .todos,
    "trailingClosures": .trailingClosures,
    "trailingCommas": .trailingCommas,
    "trailingSpace": .trailingSpace,
    "typeSugar": .typeSugar,
    "unusedArguments": .unusedArguments,
    "unusedPrivateDeclaration": .unusedPrivateDeclaration,
    "void": .void,
    "wrap": .wrap,
    "wrapArguments": .wrapArguments,
    "wrapAttributes": .wrapAttributes,
    "wrapConditionalBodies": .wrapConditionalBodies,
    "wrapEnumCases": .wrapEnumCases,
    "wrapLoopBodies": .wrapLoopBodies,
    "wrapMultilineConditionalAssignment": .wrapMultilineConditionalAssignment,
    "wrapMultilineStatementBraces": .wrapMultilineStatementBraces,
    "wrapSingleLineComments": .wrapSingleLineComments,
    "wrapSwitchCases": .wrapSwitchCases,
    "yodaConditions": .yodaConditions,
]
